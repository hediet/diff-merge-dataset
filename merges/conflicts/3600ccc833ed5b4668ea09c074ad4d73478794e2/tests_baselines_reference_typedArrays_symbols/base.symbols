=== tests/cases/compiler/typedArrays.ts ===

function CreateTypedArrayTypes() {
>CreateTypedArrayTypes : Symbol(CreateTypedArrayTypes, Decl(typedArrays.ts, 0, 0))

    var typedArrays = [];
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))

    typedArrays[0] = Int8Array;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))
>Int8Array : Symbol(Int8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))

    typedArrays[1] = Uint8Array;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))
>Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))

    typedArrays[2] = Int16Array;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))
>Int16Array : Symbol(Int16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))

    typedArrays[3] = Uint16Array;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))
>Uint16Array : Symbol(Uint16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))

    typedArrays[4] = Int32Array;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))
>Int32Array : Symbol(Int32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))

    typedArrays[5] = Uint32Array;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))
>Uint32Array : Symbol(Uint32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))

    typedArrays[6] = Float32Array;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))
>Float32Array : Symbol(Float32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))

    typedArrays[7] = Float64Array;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))
>Float64Array : Symbol(Float64Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))

    typedArrays[8] = Uint8ClampedArray;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))
>Uint8ClampedArray : Symbol(Uint8ClampedArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))

    return typedArrays;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 2, 7))
}

function CreateTypedArrayInstancesFromLength(obj: number) {
>CreateTypedArrayInstancesFromLength : Symbol(CreateTypedArrayInstancesFromLength, Decl(typedArrays.ts, 14, 1))
>obj : Symbol(obj, Decl(typedArrays.ts, 16, 45))

    var typedArrays = [];
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))

    typedArrays[0] = new Int8Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))
>Int8Array : Symbol(Int8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 16, 45))

    typedArrays[1] = new Uint8Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))
>Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 16, 45))

    typedArrays[2] = new Int16Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))
>Int16Array : Symbol(Int16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 16, 45))

    typedArrays[3] = new Uint16Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))
>Uint16Array : Symbol(Uint16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 16, 45))

    typedArrays[4] = new Int32Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))
>Int32Array : Symbol(Int32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 16, 45))

    typedArrays[5] = new Uint32Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))
>Uint32Array : Symbol(Uint32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 16, 45))

    typedArrays[6] = new Float32Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))
>Float32Array : Symbol(Float32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 16, 45))

    typedArrays[7] = new Float64Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))
>Float64Array : Symbol(Float64Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 16, 45))

    typedArrays[8] = new Uint8ClampedArray(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))
>Uint8ClampedArray : Symbol(Uint8ClampedArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 16, 45))

    return typedArrays;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 17, 7))
}

function CreateTypedArrayInstancesFromArray(obj: number[]) {
>CreateTypedArrayInstancesFromArray : Symbol(CreateTypedArrayInstancesFromArray, Decl(typedArrays.ts, 29, 1))
>obj : Symbol(obj, Decl(typedArrays.ts, 31, 44))

    var typedArrays = [];
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))

    typedArrays[0] = new Int8Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))
>Int8Array : Symbol(Int8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 31, 44))

    typedArrays[1] = new Uint8Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))
>Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 31, 44))

    typedArrays[2] = new Int16Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))
>Int16Array : Symbol(Int16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 31, 44))

    typedArrays[3] = new Uint16Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))
>Uint16Array : Symbol(Uint16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 31, 44))

    typedArrays[4] = new Int32Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))
>Int32Array : Symbol(Int32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 31, 44))

    typedArrays[5] = new Uint32Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))
>Uint32Array : Symbol(Uint32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 31, 44))

    typedArrays[6] = new Float32Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))
>Float32Array : Symbol(Float32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 31, 44))

    typedArrays[7] = new Float64Array(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))
>Float64Array : Symbol(Float64Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 31, 44))

    typedArrays[8] = new Uint8ClampedArray(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))
>Uint8ClampedArray : Symbol(Uint8ClampedArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 31, 44))

    return typedArrays;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 32, 7))
}

function CreateIntegerTypedArraysFromArray2(obj:number[]) {
>CreateIntegerTypedArraysFromArray2 : Symbol(CreateIntegerTypedArraysFromArray2, Decl(typedArrays.ts, 44, 1))
>obj : Symbol(obj, Decl(typedArrays.ts, 46, 44))

    var typedArrays = [];
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))

    typedArrays[0] = Int8Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))
>Int8Array.from : Symbol(Int8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int8Array : Symbol(Int8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 46, 44))

    typedArrays[1] = Uint8Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))
>Uint8Array.from : Symbol(Uint8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 46, 44))

    typedArrays[2] = Int16Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))
>Int16Array.from : Symbol(Int16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int16Array : Symbol(Int16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 46, 44))

    typedArrays[3] = Uint16Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))
>Uint16Array.from : Symbol(Uint16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint16Array : Symbol(Uint16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 46, 44))

    typedArrays[4] = Int32Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))
>Int32Array.from : Symbol(Int32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int32Array : Symbol(Int32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 46, 44))

    typedArrays[5] = Uint32Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))
>Uint32Array.from : Symbol(Uint32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint32Array : Symbol(Uint32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 46, 44))

    typedArrays[6] = Float32Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))
>Float32Array.from : Symbol(Float32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Float32Array : Symbol(Float32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Float32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 46, 44))

    typedArrays[7] = Float64Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))
>Float64Array.from : Symbol(Float64ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Float64Array : Symbol(Float64Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Float64ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 46, 44))

    typedArrays[8] = Uint8ClampedArray.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))
>Uint8ClampedArray.from : Symbol(Uint8ClampedArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint8ClampedArray : Symbol(Uint8ClampedArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint8ClampedArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 46, 44))

    return typedArrays;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 47, 7))
}

function CreateIntegerTypedArraysFromArrayLike(obj:ArrayLike<number>) {
>CreateIntegerTypedArraysFromArrayLike : Symbol(CreateIntegerTypedArraysFromArrayLike, Decl(typedArrays.ts, 59, 1))
>obj : Symbol(obj, Decl(typedArrays.ts, 61, 47))
>ArrayLike : Symbol(ArrayLike, Decl(lib.es5.d.ts, --, --))

    var typedArrays = [];
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))

    typedArrays[0] = Int8Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))
>Int8Array.from : Symbol(Int8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int8Array : Symbol(Int8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 61, 47))

    typedArrays[1] = Uint8Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))
>Uint8Array.from : Symbol(Uint8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 61, 47))

    typedArrays[2] = Int16Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))
>Int16Array.from : Symbol(Int16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int16Array : Symbol(Int16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 61, 47))

    typedArrays[3] = Uint16Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))
>Uint16Array.from : Symbol(Uint16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint16Array : Symbol(Uint16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 61, 47))

    typedArrays[4] = Int32Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))
>Int32Array.from : Symbol(Int32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int32Array : Symbol(Int32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 61, 47))

    typedArrays[5] = Uint32Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))
>Uint32Array.from : Symbol(Uint32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint32Array : Symbol(Uint32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 61, 47))

    typedArrays[6] = Float32Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))
>Float32Array.from : Symbol(Float32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Float32Array : Symbol(Float32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Float32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 61, 47))

    typedArrays[7] = Float64Array.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))
>Float64Array.from : Symbol(Float64ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Float64Array : Symbol(Float64Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Float64ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 61, 47))

    typedArrays[8] = Uint8ClampedArray.from(obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))
>Uint8ClampedArray.from : Symbol(Uint8ClampedArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint8ClampedArray : Symbol(Uint8ClampedArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint8ClampedArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 61, 47))

    return typedArrays;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 62, 7))
}

function CreateTypedArraysOf(obj) {
>CreateTypedArraysOf : Symbol(CreateTypedArraysOf, Decl(typedArrays.ts, 74, 1))
>obj : Symbol(obj, Decl(typedArrays.ts, 76, 29))

    var typedArrays = [];
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))

    typedArrays[0] = Int8Array.of(...obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))
>Int8Array.of : Symbol(Int8ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Int8Array : Symbol(Int8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Int8ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 76, 29))

    typedArrays[1] = Uint8Array.of(...obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))
>Uint8Array.of : Symbol(Uint8ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Uint8ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 76, 29))

    typedArrays[2] = Int16Array.of(...obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))
>Int16Array.of : Symbol(Int16ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Int16Array : Symbol(Int16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Int16ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 76, 29))

    typedArrays[3] = Uint16Array.of(...obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))
>Uint16Array.of : Symbol(Uint16ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Uint16Array : Symbol(Uint16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Uint16ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 76, 29))

    typedArrays[4] = Int32Array.of(...obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))
>Int32Array.of : Symbol(Int32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Int32Array : Symbol(Int32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Int32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 76, 29))

    typedArrays[5] = Uint32Array.of(...obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))
>Uint32Array.of : Symbol(Uint32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Uint32Array : Symbol(Uint32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Uint32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 76, 29))

    typedArrays[6] = Float32Array.of(...obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))
>Float32Array.of : Symbol(Float32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Float32Array : Symbol(Float32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Float32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 76, 29))

    typedArrays[7] = Float64Array.of(...obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))
>Float64Array.of : Symbol(Float64ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Float64Array : Symbol(Float64Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Float64ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 76, 29))

    typedArrays[8] = Uint8ClampedArray.of(...obj);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))
>Uint8ClampedArray.of : Symbol(Uint8ClampedArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Uint8ClampedArray : Symbol(Uint8ClampedArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Uint8ClampedArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 76, 29))

    return typedArrays;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 77, 7))
}

function CreateTypedArraysOf2() {
>CreateTypedArraysOf2 : Symbol(CreateTypedArraysOf2, Decl(typedArrays.ts, 89, 1))

    var typedArrays = [];
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))

    typedArrays[0] = Int8Array.of(1,2,3,4);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))
>Int8Array.of : Symbol(Int8ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Int8Array : Symbol(Int8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Int8ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))

    typedArrays[1] = Uint8Array.of(1,2,3,4);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))
>Uint8Array.of : Symbol(Uint8ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Uint8ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))

    typedArrays[2] = Int16Array.of(1,2,3,4);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))
>Int16Array.of : Symbol(Int16ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Int16Array : Symbol(Int16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Int16ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))

    typedArrays[3] = Uint16Array.of(1,2,3,4);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))
>Uint16Array.of : Symbol(Uint16ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Uint16Array : Symbol(Uint16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Uint16ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))

    typedArrays[4] = Int32Array.of(1,2,3,4);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))
>Int32Array.of : Symbol(Int32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Int32Array : Symbol(Int32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Int32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))

    typedArrays[5] = Uint32Array.of(1,2,3,4);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))
>Uint32Array.of : Symbol(Uint32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Uint32Array : Symbol(Uint32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Uint32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))

    typedArrays[6] = Float32Array.of(1,2,3,4);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))
>Float32Array.of : Symbol(Float32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Float32Array : Symbol(Float32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Float32ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))

    typedArrays[7] = Float64Array.of(1,2,3,4);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))
>Float64Array.of : Symbol(Float64ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Float64Array : Symbol(Float64Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Float64ArrayConstructor.of, Decl(lib.es5.d.ts, --, --))

    typedArrays[8] = Uint8ClampedArray.of(1,2,3,4);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))
>Uint8ClampedArray.of : Symbol(Uint8ClampedArrayConstructor.of, Decl(lib.es5.d.ts, --, --))
>Uint8ClampedArray : Symbol(Uint8ClampedArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>of : Symbol(Uint8ClampedArrayConstructor.of, Decl(lib.es5.d.ts, --, --))

    return typedArrays;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 92, 7))
}

function CreateTypedArraysFromMapFn(obj:ArrayLike<number>, mapFn: (n:number, v:number)=> number) {
>CreateTypedArraysFromMapFn : Symbol(CreateTypedArraysFromMapFn, Decl(typedArrays.ts, 104, 1))
>obj : Symbol(obj, Decl(typedArrays.ts, 106, 36))
>ArrayLike : Symbol(ArrayLike, Decl(lib.es5.d.ts, --, --))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 106, 58))
>n : Symbol(n, Decl(typedArrays.ts, 106, 67))
>v : Symbol(v, Decl(typedArrays.ts, 106, 76))

    var typedArrays = [];
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))

    typedArrays[0] = Int8Array.from(obj, mapFn);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))
>Int8Array.from : Symbol(Int8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int8Array : Symbol(Int8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 106, 36))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 106, 58))

    typedArrays[1] = Uint8Array.from(obj, mapFn);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))
>Uint8Array.from : Symbol(Uint8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 106, 36))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 106, 58))

    typedArrays[2] = Int16Array.from(obj, mapFn);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))
>Int16Array.from : Symbol(Int16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int16Array : Symbol(Int16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 106, 36))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 106, 58))

    typedArrays[3] = Uint16Array.from(obj, mapFn);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))
>Uint16Array.from : Symbol(Uint16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint16Array : Symbol(Uint16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 106, 36))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 106, 58))

    typedArrays[4] = Int32Array.from(obj, mapFn);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))
>Int32Array.from : Symbol(Int32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int32Array : Symbol(Int32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 106, 36))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 106, 58))

    typedArrays[5] = Uint32Array.from(obj, mapFn);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))
>Uint32Array.from : Symbol(Uint32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint32Array : Symbol(Uint32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 106, 36))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 106, 58))

    typedArrays[6] = Float32Array.from(obj, mapFn);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))
>Float32Array.from : Symbol(Float32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Float32Array : Symbol(Float32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Float32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 106, 36))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 106, 58))

    typedArrays[7] = Float64Array.from(obj, mapFn);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))
>Float64Array.from : Symbol(Float64ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Float64Array : Symbol(Float64Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Float64ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 106, 36))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 106, 58))

    typedArrays[8] = Uint8ClampedArray.from(obj, mapFn);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))
>Uint8ClampedArray.from : Symbol(Uint8ClampedArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint8ClampedArray : Symbol(Uint8ClampedArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint8ClampedArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 106, 36))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 106, 58))

    return typedArrays;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 107, 7))
}

function CreateTypedArraysFromThisObj(obj:ArrayLike<number>, mapFn: (n:number, v:number)=> number, thisArg: {}) {
>CreateTypedArraysFromThisObj : Symbol(CreateTypedArraysFromThisObj, Decl(typedArrays.ts, 119, 1))
>obj : Symbol(obj, Decl(typedArrays.ts, 121, 38))
>ArrayLike : Symbol(ArrayLike, Decl(lib.es5.d.ts, --, --))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 121, 60))
>n : Symbol(n, Decl(typedArrays.ts, 121, 69))
>v : Symbol(v, Decl(typedArrays.ts, 121, 78))
>thisArg : Symbol(thisArg, Decl(typedArrays.ts, 121, 98))

    var typedArrays = [];
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))

    typedArrays[0] = Int8Array.from(obj, mapFn, thisArg);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))
>Int8Array.from : Symbol(Int8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int8Array : Symbol(Int8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 121, 38))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 121, 60))
>thisArg : Symbol(thisArg, Decl(typedArrays.ts, 121, 98))

    typedArrays[1] = Uint8Array.from(obj, mapFn, thisArg);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))
>Uint8Array.from : Symbol(Uint8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint8Array : Symbol(Uint8Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint8ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 121, 38))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 121, 60))
>thisArg : Symbol(thisArg, Decl(typedArrays.ts, 121, 98))

    typedArrays[2] = Int16Array.from(obj, mapFn, thisArg);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))
>Int16Array.from : Symbol(Int16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int16Array : Symbol(Int16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 121, 38))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 121, 60))
>thisArg : Symbol(thisArg, Decl(typedArrays.ts, 121, 98))

    typedArrays[3] = Uint16Array.from(obj, mapFn, thisArg);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))
>Uint16Array.from : Symbol(Uint16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint16Array : Symbol(Uint16Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint16ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 121, 38))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 121, 60))
>thisArg : Symbol(thisArg, Decl(typedArrays.ts, 121, 98))

    typedArrays[4] = Int32Array.from(obj, mapFn, thisArg);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))
>Int32Array.from : Symbol(Int32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Int32Array : Symbol(Int32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Int32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 121, 38))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 121, 60))
>thisArg : Symbol(thisArg, Decl(typedArrays.ts, 121, 98))

    typedArrays[5] = Uint32Array.from(obj, mapFn, thisArg);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))
>Uint32Array.from : Symbol(Uint32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint32Array : Symbol(Uint32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 121, 38))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 121, 60))
>thisArg : Symbol(thisArg, Decl(typedArrays.ts, 121, 98))

    typedArrays[6] = Float32Array.from(obj, mapFn, thisArg);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))
>Float32Array.from : Symbol(Float32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Float32Array : Symbol(Float32Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Float32ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 121, 38))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 121, 60))
>thisArg : Symbol(thisArg, Decl(typedArrays.ts, 121, 98))

    typedArrays[7] = Float64Array.from(obj, mapFn, thisArg);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))
>Float64Array.from : Symbol(Float64ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Float64Array : Symbol(Float64Array, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Float64ArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 121, 38))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 121, 60))
>thisArg : Symbol(thisArg, Decl(typedArrays.ts, 121, 98))

    typedArrays[8] = Uint8ClampedArray.from(obj, mapFn, thisArg);
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))
>Uint8ClampedArray.from : Symbol(Uint8ClampedArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>Uint8ClampedArray : Symbol(Uint8ClampedArray, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>from : Symbol(Uint8ClampedArrayConstructor.from, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --))
>obj : Symbol(obj, Decl(typedArrays.ts, 121, 38))
>mapFn : Symbol(mapFn, Decl(typedArrays.ts, 121, 60))
>thisArg : Symbol(thisArg, Decl(typedArrays.ts, 121, 98))

    return typedArrays;
>typedArrays : Symbol(typedArrays, Decl(typedArrays.ts, 122, 7))
}
