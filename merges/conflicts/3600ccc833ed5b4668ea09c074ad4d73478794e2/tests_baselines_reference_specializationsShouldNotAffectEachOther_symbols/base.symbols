=== tests/cases/compiler/specializationsShouldNotAffectEachOther.ts ===

interface Series  {
>Series : Symbol(Series, Decl(specializationsShouldNotAffectEachOther.ts, 0, 0))

    data: string[];
>data : Symbol(Series.data, Decl(specializationsShouldNotAffectEachOther.ts, 1, 19))
}

var series: Series;
>series : Symbol(series, Decl(specializationsShouldNotAffectEachOther.ts, 5, 3))
>Series : Symbol(Series, Decl(specializationsShouldNotAffectEachOther.ts, 0, 0))


function foo() {
>foo : Symbol(foo, Decl(specializationsShouldNotAffectEachOther.ts, 5, 19))

    var seriesExtent = (series) => null;
>seriesExtent : Symbol(seriesExtent, Decl(specializationsShouldNotAffectEachOther.ts, 10, 7))
>series : Symbol(series, Decl(specializationsShouldNotAffectEachOther.ts, 10, 24))

    var series2: number[];
>series2 : Symbol(series2, Decl(specializationsShouldNotAffectEachOther.ts, 12, 7))

    series2.map(seriesExtent);
>series2.map : Symbol(Array.map, Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --))
>series2 : Symbol(series2, Decl(specializationsShouldNotAffectEachOther.ts, 12, 7))
>map : Symbol(Array.map, Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --))
>seriesExtent : Symbol(seriesExtent, Decl(specializationsShouldNotAffectEachOther.ts, 10, 7))

    return null;
}


var keyExtent2: any[] = series.data.map(function (d: string) { return d; });
>keyExtent2 : Symbol(keyExtent2, Decl(specializationsShouldNotAffectEachOther.ts, 19, 3))
>series.data.map : Symbol(Array.map, Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --))
>series.data : Symbol(Series.data, Decl(specializationsShouldNotAffectEachOther.ts, 1, 19))
>series : Symbol(series, Decl(specializationsShouldNotAffectEachOther.ts, 5, 3))
>data : Symbol(Series.data, Decl(specializationsShouldNotAffectEachOther.ts, 1, 19))
>map : Symbol(Array.map, Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --), Decl(lib.d.ts, --, --))
>d : Symbol(d, Decl(specializationsShouldNotAffectEachOther.ts, 19, 50))
>d : Symbol(d, Decl(specializationsShouldNotAffectEachOther.ts, 19, 50))

